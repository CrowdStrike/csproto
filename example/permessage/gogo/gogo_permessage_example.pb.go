// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gogo_permessage_example.proto

package gogo

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_EVENT_TYPE_UNDEFINED EventType = 0
	EventType_EVENT_TYPE_ONE       EventType = 1
	EventType_EVENT_TYPE_TWO       EventType = 2
)

var EventType_name = map[int32]string{
	0: "EVENT_TYPE_UNDEFINED",
	1: "EVENT_TYPE_ONE",
	2: "EVENT_TYPE_TWO",
}

var EventType_value = map[string]int32{
	"EVENT_TYPE_UNDEFINED": 0,
	"EVENT_TYPE_ONE":       1,
	"EVENT_TYPE_TWO":       2,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77954bdb6fa16f29, []int{0}
}

type TestEvent struct {
	Name      string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Info      string         `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	IsAwesome bool           `protobuf:"varint,3,opt,name=isAwesome,proto3" json:"isAwesome,omitempty"`
	Labels    []string       `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Embedded  *EmbeddedEvent `protobuf:"bytes,5,opt,name=embedded,proto3" json:"embedded,omitempty"`
	// Types that are valid to be assigned to Path:
	//	*TestEvent_Jedi
	//	*TestEvent_Sith
	//	*TestEvent_Other
	Path                 isTestEvent_Path     `protobuf_oneof:"path"`
	Nested               *TestEvent_NestedMsg `protobuf:"bytes,9,opt,name=nested,proto3" json:"nested,omitempty"`
	Ts                   *types.Timestamp     `protobuf:"bytes,10,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TestEvent) Reset()         { *m = TestEvent{} }
func (m *TestEvent) String() string { return proto.CompactTextString(m) }
func (*TestEvent) ProtoMessage()    {}
func (*TestEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_77954bdb6fa16f29, []int{0}
}
func (m *TestEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestEvent.Unmarshal(m, b)
}
func (m *TestEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestEvent.Marshal(b, m, deterministic)
}
func (m *TestEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestEvent.Merge(m, src)
}
func (m *TestEvent) XXX_Size() int {
	return xxx_messageInfo_TestEvent.Size(m)
}
func (m *TestEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TestEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TestEvent proto.InternalMessageInfo

type isTestEvent_Path interface {
	isTestEvent_Path()
}

type TestEvent_Jedi struct {
	Jedi bool `protobuf:"varint,6,opt,name=jedi,proto3,oneof" json:"jedi,omitempty"`
}
type TestEvent_Sith struct {
	Sith bool `protobuf:"varint,7,opt,name=sith,proto3,oneof" json:"sith,omitempty"`
}
type TestEvent_Other struct {
	Other string `protobuf:"bytes,8,opt,name=other,proto3,oneof" json:"other,omitempty"`
}

func (*TestEvent_Jedi) isTestEvent_Path()  {}
func (*TestEvent_Sith) isTestEvent_Path()  {}
func (*TestEvent_Other) isTestEvent_Path() {}

func (m *TestEvent) GetPath() isTestEvent_Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *TestEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestEvent) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *TestEvent) GetIsAwesome() bool {
	if m != nil {
		return m.IsAwesome
	}
	return false
}

func (m *TestEvent) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *TestEvent) GetEmbedded() *EmbeddedEvent {
	if m != nil {
		return m.Embedded
	}
	return nil
}

func (m *TestEvent) GetJedi() bool {
	if x, ok := m.GetPath().(*TestEvent_Jedi); ok {
		return x.Jedi
	}
	return false
}

func (m *TestEvent) GetSith() bool {
	if x, ok := m.GetPath().(*TestEvent_Sith); ok {
		return x.Sith
	}
	return false
}

func (m *TestEvent) GetOther() string {
	if x, ok := m.GetPath().(*TestEvent_Other); ok {
		return x.Other
	}
	return ""
}

func (m *TestEvent) GetNested() *TestEvent_NestedMsg {
	if m != nil {
		return m.Nested
	}
	return nil
}

func (m *TestEvent) GetTs() *types.Timestamp {
	if m != nil {
		return m.Ts
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TestEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TestEvent_Jedi)(nil),
		(*TestEvent_Sith)(nil),
		(*TestEvent_Other)(nil),
	}
}

type TestEvent_NestedMsg struct {
	Details              string   `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestEvent_NestedMsg) Reset()         { *m = TestEvent_NestedMsg{} }
func (m *TestEvent_NestedMsg) String() string { return proto.CompactTextString(m) }
func (*TestEvent_NestedMsg) ProtoMessage()    {}
func (*TestEvent_NestedMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_77954bdb6fa16f29, []int{0, 0}
}
func (m *TestEvent_NestedMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestEvent_NestedMsg.Unmarshal(m, b)
}
func (m *TestEvent_NestedMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestEvent_NestedMsg.Marshal(b, m, deterministic)
}
func (m *TestEvent_NestedMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestEvent_NestedMsg.Merge(m, src)
}
func (m *TestEvent_NestedMsg) XXX_Size() int {
	return xxx_messageInfo_TestEvent_NestedMsg.Size(m)
}
func (m *TestEvent_NestedMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_TestEvent_NestedMsg.DiscardUnknown(m)
}

var xxx_messageInfo_TestEvent_NestedMsg proto.InternalMessageInfo

func (m *TestEvent_NestedMsg) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

type EmbeddedEvent struct {
	ID                   int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Stuff                string   `protobuf:"bytes,2,opt,name=stuff,proto3" json:"stuff,omitempty"`
	FavoriteNumbers      []int32  `protobuf:"varint,3,rep,packed,name=favoriteNumbers,proto3" json:"favoriteNumbers,omitempty"`
	RandomThings         [][]byte `protobuf:"bytes,4,rep,name=randomThings,proto3" json:"randomThings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmbeddedEvent) Reset()         { *m = EmbeddedEvent{} }
func (m *EmbeddedEvent) String() string { return proto.CompactTextString(m) }
func (*EmbeddedEvent) ProtoMessage()    {}
func (*EmbeddedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_77954bdb6fa16f29, []int{1}
}
func (m *EmbeddedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmbeddedEvent.Unmarshal(m, b)
}
func (m *EmbeddedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmbeddedEvent.Marshal(b, m, deterministic)
}
func (m *EmbeddedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmbeddedEvent.Merge(m, src)
}
func (m *EmbeddedEvent) XXX_Size() int {
	return xxx_messageInfo_EmbeddedEvent.Size(m)
}
func (m *EmbeddedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_EmbeddedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_EmbeddedEvent proto.InternalMessageInfo

func (m *EmbeddedEvent) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *EmbeddedEvent) GetStuff() string {
	if m != nil {
		return m.Stuff
	}
	return ""
}

func (m *EmbeddedEvent) GetFavoriteNumbers() []int32 {
	if m != nil {
		return m.FavoriteNumbers
	}
	return nil
}

func (m *EmbeddedEvent) GetRandomThings() [][]byte {
	if m != nil {
		return m.RandomThings
	}
	return nil
}

type AllTheThings struct {
	ID                   int32          `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	TheString            string         `protobuf:"bytes,2,opt,name=theString,proto3" json:"theString,omitempty"`
	TheBool              bool           `protobuf:"varint,3,opt,name=theBool,proto3" json:"theBool,omitempty"`
	TheInt32             int32          `protobuf:"varint,4,opt,name=theInt32,proto3" json:"theInt32,omitempty"`
	TheInt64             int64          `protobuf:"varint,5,opt,name=theInt64,proto3" json:"theInt64,omitempty"`
	TheUInt32            uint32         `protobuf:"varint,6,opt,name=theUInt32,proto3" json:"theUInt32,omitempty"`
	TheUInt64            uint64         `protobuf:"varint,7,opt,name=theUInt64,proto3" json:"theUInt64,omitempty"`
	TheSInt32            int32          `protobuf:"zigzag32,8,opt,name=theSInt32,proto3" json:"theSInt32,omitempty"`
	TheSInt64            int64          `protobuf:"zigzag64,9,opt,name=theSInt64,proto3" json:"theSInt64,omitempty"`
	TheFixed32           uint32         `protobuf:"fixed32,10,opt,name=theFixed32,proto3" json:"theFixed32,omitempty"`
	TheFixed64           uint64         `protobuf:"fixed64,11,opt,name=theFixed64,proto3" json:"theFixed64,omitempty"`
	TheSFixed32          int32          `protobuf:"fixed32,12,opt,name=theSFixed32,proto3" json:"theSFixed32,omitempty"`
	TheSFixed64          int64          `protobuf:"fixed64,13,opt,name=theSFixed64,proto3" json:"theSFixed64,omitempty"`
	TheEventType         EventType      `protobuf:"varint,14,opt,name=theEventType,proto3,enum=crowdstrike.csproto.example.permessage.gogo.EventType" json:"theEventType,omitempty"`
	TheBytes             []byte         `protobuf:"bytes,15,opt,name=theBytes,proto3" json:"theBytes,omitempty"`
	TheMessage           *EmbeddedEvent `protobuf:"bytes,16,opt,name=theMessage,proto3" json:"theMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AllTheThings) Reset()         { *m = AllTheThings{} }
func (m *AllTheThings) String() string { return proto.CompactTextString(m) }
func (*AllTheThings) ProtoMessage()    {}
func (*AllTheThings) Descriptor() ([]byte, []int) {
	return fileDescriptor_77954bdb6fa16f29, []int{2}
}
func (m *AllTheThings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllTheThings.Unmarshal(m, b)
}
func (m *AllTheThings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllTheThings.Marshal(b, m, deterministic)
}
func (m *AllTheThings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllTheThings.Merge(m, src)
}
func (m *AllTheThings) XXX_Size() int {
	return xxx_messageInfo_AllTheThings.Size(m)
}
func (m *AllTheThings) XXX_DiscardUnknown() {
	xxx_messageInfo_AllTheThings.DiscardUnknown(m)
}

var xxx_messageInfo_AllTheThings proto.InternalMessageInfo

func (m *AllTheThings) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *AllTheThings) GetTheString() string {
	if m != nil {
		return m.TheString
	}
	return ""
}

func (m *AllTheThings) GetTheBool() bool {
	if m != nil {
		return m.TheBool
	}
	return false
}

func (m *AllTheThings) GetTheInt32() int32 {
	if m != nil {
		return m.TheInt32
	}
	return 0
}

func (m *AllTheThings) GetTheInt64() int64 {
	if m != nil {
		return m.TheInt64
	}
	return 0
}

func (m *AllTheThings) GetTheUInt32() uint32 {
	if m != nil {
		return m.TheUInt32
	}
	return 0
}

func (m *AllTheThings) GetTheUInt64() uint64 {
	if m != nil {
		return m.TheUInt64
	}
	return 0
}

func (m *AllTheThings) GetTheSInt32() int32 {
	if m != nil {
		return m.TheSInt32
	}
	return 0
}

func (m *AllTheThings) GetTheSInt64() int64 {
	if m != nil {
		return m.TheSInt64
	}
	return 0
}

func (m *AllTheThings) GetTheFixed32() uint32 {
	if m != nil {
		return m.TheFixed32
	}
	return 0
}

func (m *AllTheThings) GetTheFixed64() uint64 {
	if m != nil {
		return m.TheFixed64
	}
	return 0
}

func (m *AllTheThings) GetTheSFixed32() int32 {
	if m != nil {
		return m.TheSFixed32
	}
	return 0
}

func (m *AllTheThings) GetTheSFixed64() int64 {
	if m != nil {
		return m.TheSFixed64
	}
	return 0
}

func (m *AllTheThings) GetTheEventType() EventType {
	if m != nil {
		return m.TheEventType
	}
	return EventType_EVENT_TYPE_UNDEFINED
}

func (m *AllTheThings) GetTheBytes() []byte {
	if m != nil {
		return m.TheBytes
	}
	return nil
}

func (m *AllTheThings) GetTheMessage() *EmbeddedEvent {
	if m != nil {
		return m.TheMessage
	}
	return nil
}

type RepeatAllTheThings struct {
	ID                   int32            `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	TheStrings           []string         `protobuf:"bytes,2,rep,name=theStrings,proto3" json:"theStrings,omitempty"`
	TheBools             []bool           `protobuf:"varint,3,rep,packed,name=theBools,proto3" json:"theBools,omitempty"`
	TheInt32S            []int32          `protobuf:"varint,4,rep,packed,name=theInt32s,proto3" json:"theInt32s,omitempty"`
	TheInt64S            []int64          `protobuf:"varint,5,rep,packed,name=theInt64s,proto3" json:"theInt64s,omitempty"`
	TheUInt32S           []uint32         `protobuf:"varint,6,rep,packed,name=theUInt32s,proto3" json:"theUInt32s,omitempty"`
	TheUInt64S           []uint64         `protobuf:"varint,7,rep,packed,name=theUInt64s,proto3" json:"theUInt64s,omitempty"`
	TheSInt32S           []int32          `protobuf:"zigzag32,8,rep,packed,name=theSInt32s,proto3" json:"theSInt32s,omitempty"`
	TheSInt64S           []int64          `protobuf:"zigzag64,9,rep,packed,name=theSInt64s,proto3" json:"theSInt64s,omitempty"`
	TheFixed32S          []uint32         `protobuf:"fixed32,10,rep,packed,name=theFixed32s,proto3" json:"theFixed32s,omitempty"`
	TheFixed64S          []uint64         `protobuf:"fixed64,11,rep,packed,name=theFixed64s,proto3" json:"theFixed64s,omitempty"`
	TheSFixed32S         []int32          `protobuf:"fixed32,12,rep,packed,name=theSFixed32s,proto3" json:"theSFixed32s,omitempty"`
	TheSFixed64S         []int64          `protobuf:"fixed64,13,rep,packed,name=theSFixed64s,proto3" json:"theSFixed64s,omitempty"`
	TheEventTypes        []EventType      `protobuf:"varint,14,rep,packed,name=theEventTypes,proto3,enum=crowdstrike.csproto.example.permessage.gogo.EventType" json:"theEventTypes,omitempty"`
	TheBytes             [][]byte         `protobuf:"bytes,15,rep,name=theBytes,proto3" json:"theBytes,omitempty"`
	TheMessages          []*EmbeddedEvent `protobuf:"bytes,16,rep,name=theMessages,proto3" json:"theMessages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RepeatAllTheThings) Reset()         { *m = RepeatAllTheThings{} }
func (m *RepeatAllTheThings) String() string { return proto.CompactTextString(m) }
func (*RepeatAllTheThings) ProtoMessage()    {}
func (*RepeatAllTheThings) Descriptor() ([]byte, []int) {
	return fileDescriptor_77954bdb6fa16f29, []int{3}
}
func (m *RepeatAllTheThings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatAllTheThings.Unmarshal(m, b)
}
func (m *RepeatAllTheThings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatAllTheThings.Marshal(b, m, deterministic)
}
func (m *RepeatAllTheThings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatAllTheThings.Merge(m, src)
}
func (m *RepeatAllTheThings) XXX_Size() int {
	return xxx_messageInfo_RepeatAllTheThings.Size(m)
}
func (m *RepeatAllTheThings) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatAllTheThings.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatAllTheThings proto.InternalMessageInfo

func (m *RepeatAllTheThings) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *RepeatAllTheThings) GetTheStrings() []string {
	if m != nil {
		return m.TheStrings
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheBools() []bool {
	if m != nil {
		return m.TheBools
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheInt32S() []int32 {
	if m != nil {
		return m.TheInt32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheInt64S() []int64 {
	if m != nil {
		return m.TheInt64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheUInt32S() []uint32 {
	if m != nil {
		return m.TheUInt32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheUInt64S() []uint64 {
	if m != nil {
		return m.TheUInt64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheSInt32S() []int32 {
	if m != nil {
		return m.TheSInt32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheSInt64S() []int64 {
	if m != nil {
		return m.TheSInt64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheFixed32S() []uint32 {
	if m != nil {
		return m.TheFixed32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheFixed64S() []uint64 {
	if m != nil {
		return m.TheFixed64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheSFixed32S() []int32 {
	if m != nil {
		return m.TheSFixed32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheSFixed64S() []int64 {
	if m != nil {
		return m.TheSFixed64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheEventTypes() []EventType {
	if m != nil {
		return m.TheEventTypes
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheBytes() [][]byte {
	if m != nil {
		return m.TheBytes
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheMessages() []*EmbeddedEvent {
	if m != nil {
		return m.TheMessages
	}
	return nil
}

func init() {
	proto.RegisterEnum("crowdstrike.csproto.example.permessage.gogo.EventType", EventType_name, EventType_value)
	proto.RegisterType((*TestEvent)(nil), "crowdstrike.csproto.example.permessage.gogo.TestEvent")
	proto.RegisterType((*TestEvent_NestedMsg)(nil), "crowdstrike.csproto.example.permessage.gogo.TestEvent.NestedMsg")
	proto.RegisterType((*EmbeddedEvent)(nil), "crowdstrike.csproto.example.permessage.gogo.EmbeddedEvent")
	proto.RegisterType((*AllTheThings)(nil), "crowdstrike.csproto.example.permessage.gogo.AllTheThings")
	proto.RegisterType((*RepeatAllTheThings)(nil), "crowdstrike.csproto.example.permessage.gogo.RepeatAllTheThings")
}

func init() { proto.RegisterFile("gogo_permessage_example.proto", fileDescriptor_77954bdb6fa16f29) }

var fileDescriptor_77954bdb6fa16f29 = []byte{
	// 857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xdf, 0x6a, 0xe3, 0x46,
	0x14, 0xc6, 0x23, 0x8f, 0xff, 0x4e, 0x6c, 0xc7, 0x3b, 0x84, 0x65, 0x08, 0xdb, 0x76, 0x30, 0x14,
	0x86, 0x2d, 0xc8, 0x90, 0x18, 0x53, 0x7a, 0xd5, 0x4d, 0xe3, 0x65, 0x73, 0x11, 0x6f, 0x99, 0x75,
	0xb6, 0x6d, 0x58, 0x08, 0x72, 0x7c, 0x6c, 0xa9, 0x95, 0x2c, 0xa3, 0x99, 0xec, 0x9f, 0xbb, 0x42,
	0xdf, 0xaa, 0x0f, 0xd3, 0x67, 0x29, 0x33, 0x1a, 0x49, 0xa3, 0x14, 0x0a, 0x21, 0x77, 0x3e, 0xbf,
	0x33, 0xe7, 0xf3, 0x37, 0x3a, 0x9f, 0x84, 0xbf, 0xda, 0xa6, 0xdb, 0xf4, 0x76, 0x0f, 0x59, 0x02,
	0x52, 0x06, 0x5b, 0xb8, 0x85, 0xcf, 0x41, 0xb2, 0x8f, 0xc1, 0xdf, 0x67, 0xa9, 0x4a, 0xc9, 0x77,
	0x77, 0x59, 0xfa, 0x69, 0x2d, 0x55, 0x16, 0xfd, 0x01, 0xfe, 0x9d, 0x34, 0xd0, 0x2f, 0x8f, 0x94,
	0x53, 0xbe, 0x56, 0x39, 0xf9, 0x66, 0x9b, 0xa6, 0xdb, 0x18, 0x26, 0xe6, 0xd4, 0xea, 0x7e, 0x33,
	0x51, 0x51, 0x02, 0x52, 0x05, 0xc9, 0x3e, 0x57, 0x1b, 0xff, 0x8d, 0x70, 0x6f, 0x09, 0x52, 0xcd,
	0x3f, 0xc2, 0x4e, 0x11, 0x82, 0x9b, 0xbb, 0x20, 0x01, 0xea, 0x31, 0x8f, 0xf7, 0x84, 0xf9, 0xad,
	0x59, 0xb4, 0xdb, 0xa4, 0xb4, 0x91, 0x33, 0xfd, 0x9b, 0xbc, 0xc0, 0xbd, 0x48, 0xbe, 0xfa, 0x04,
	0x32, 0x4d, 0x80, 0x22, 0xe6, 0xf1, 0xae, 0xa8, 0x00, 0x79, 0x8e, 0xdb, 0x71, 0xb0, 0x82, 0x58,
	0xd2, 0x26, 0x43, 0xbc, 0x27, 0x6c, 0x45, 0xde, 0xe3, 0x2e, 0x24, 0x2b, 0x58, 0xaf, 0x61, 0x4d,
	0x5b, 0xcc, 0xe3, 0x87, 0xa7, 0x3f, 0xf8, 0x8f, 0xb8, 0x8c, 0x3f, 0xb7, 0xc3, 0xc6, 0xab, 0x28,
	0xb5, 0xc8, 0x31, 0x6e, 0xfe, 0x0e, 0xeb, 0x88, 0xb6, 0xb5, 0x91, 0x37, 0x07, 0xc2, 0x54, 0x9a,
	0xca, 0x48, 0x85, 0xb4, 0x53, 0x50, 0x5d, 0x91, 0xe7, 0xb8, 0x95, 0xaa, 0x10, 0x32, 0xda, 0xd5,
	0xd7, 0x79, 0x73, 0x20, 0xf2, 0x92, 0xfc, 0x8a, 0xdb, 0x3b, 0x90, 0x0a, 0xd6, 0xb4, 0x67, 0x9c,
	0xfd, 0xf8, 0x28, 0x67, 0xe5, 0x13, 0xf4, 0x17, 0x46, 0xe4, 0x4a, 0x6e, 0x85, 0xd5, 0x23, 0x2f,
	0x71, 0x43, 0x49, 0x8a, 0x8d, 0xea, 0x89, 0x9f, 0xef, 0xc3, 0x2f, 0xf6, 0xe1, 0x2f, 0x8b, 0x7d,
	0x88, 0x86, 0x92, 0x27, 0xdf, 0xe2, 0x5e, 0x29, 0x40, 0x28, 0xee, 0xac, 0x41, 0x05, 0x51, 0x2c,
	0xed, 0x3e, 0x8a, 0xf2, 0xbc, 0x8d, 0x9b, 0xfb, 0x40, 0x85, 0xe3, 0xbf, 0x3c, 0x3c, 0xa8, 0x3d,
	0x14, 0x32, 0xc4, 0x8d, 0xcb, 0x0b, 0x73, 0xbc, 0x25, 0x1a, 0x97, 0x17, 0xe4, 0x18, 0xb7, 0xa4,
	0xba, 0xdf, 0x6c, 0xec, 0xf6, 0xf2, 0x82, 0x70, 0x7c, 0xb4, 0x09, 0x3e, 0xa6, 0x59, 0xa4, 0x60,
	0x71, 0x9f, 0xac, 0x20, 0x93, 0x14, 0x31, 0xc4, 0x5b, 0xe2, 0x21, 0x26, 0x63, 0xdc, 0xcf, 0x82,
	0xdd, 0x3a, 0x4d, 0x96, 0x61, 0xb4, 0xdb, 0xe6, 0x0b, 0xed, 0x8b, 0x1a, 0x1b, 0xff, 0xd3, 0xc4,
	0xfd, 0x57, 0x71, 0xbc, 0x0c, 0x21, 0x07, 0xff, 0x31, 0xf1, 0x02, 0xf7, 0x54, 0x08, 0xef, 0x54,
	0x16, 0xed, 0xb6, 0xd6, 0x48, 0x05, 0xf4, 0x35, 0x55, 0x08, 0xe7, 0x69, 0x1a, 0xdb, 0x24, 0x15,
	0x25, 0x39, 0xc1, 0x5d, 0x15, 0xc2, 0xe5, 0x4e, 0x9d, 0x9d, 0xd2, 0xa6, 0x51, 0x2b, 0xeb, 0xaa,
	0x37, 0x9b, 0x9a, 0x2c, 0x21, 0x51, 0xd6, 0xf6, 0xff, 0xae, 0xf3, 0x41, 0x1d, 0x8a, 0x81, 0xa8,
	0x80, 0xd3, 0x9d, 0x4d, 0x4d, 0x38, 0x9a, 0xa2, 0x02, 0x85, 0xd7, 0x7c, 0x56, 0x67, 0xe4, 0x99,
	0xa8, 0x80, 0xd3, 0x9d, 0x4d, 0x4d, 0x50, 0x88, 0xa8, 0x00, 0xf9, 0x1a, 0x63, 0x15, 0xc2, 0xeb,
	0xe8, 0x33, 0xac, 0xcf, 0x4e, 0xcd, 0xc6, 0x3b, 0xc2, 0x21, 0x6e, 0x7f, 0x36, 0xa5, 0x87, 0xcc,
	0xe3, 0x6d, 0xe1, 0x10, 0xc2, 0xf0, 0xa1, 0x16, 0x2b, 0x04, 0xfa, 0xcc, 0xe3, 0x47, 0xc2, 0x45,
	0xb5, 0x13, 0xb3, 0x29, 0x1d, 0x30, 0x8f, 0x8f, 0x84, 0x8b, 0xc8, 0x0d, 0xee, 0xab, 0x10, 0x4c,
	0x18, 0x96, 0x5f, 0xf6, 0x40, 0x87, 0xcc, 0xe3, 0xc3, 0xd3, 0xd9, 0xe3, 0xde, 0xb3, 0x62, 0x5a,
	0xd4, 0xb4, 0xec, 0x33, 0x3f, 0xff, 0xa2, 0x40, 0xd2, 0x23, 0xe6, 0xf1, 0xbe, 0x28, 0x6b, 0x72,
	0x63, 0xee, 0x76, 0x95, 0xcb, 0xd0, 0xd1, 0x93, 0xdf, 0x6e, 0x47, 0x6d, 0xfc, 0x67, 0x0b, 0x13,
	0x01, 0x7b, 0x08, 0xd4, 0xff, 0xc6, 0x2c, 0x7f, 0xbc, 0x79, 0xaa, 0x24, 0x6d, 0x98, 0x4f, 0x8f,
	0x43, 0x0a, 0xfb, 0x69, 0x1a, 0xe7, 0x71, 0xef, 0x8a, 0xb2, 0xb6, 0x8b, 0x35, 0x4b, 0xce, 0x43,
	0xde, 0x12, 0x15, 0xa8, 0xba, 0xb3, 0xa9, 0xa4, 0x2d, 0x86, 0x38, 0x12, 0x15, 0xb0, 0xff, 0x7b,
	0x6d, 0x87, 0xdb, 0x0c, 0xf1, 0x81, 0x70, 0x88, 0xd3, 0xd7, 0xe3, 0x1d, 0x86, 0x78, 0x53, 0x38,
	0xa4, 0xf0, 0x6d, 0xe7, 0xbb, 0x0c, 0xf1, 0x67, 0xc2, 0x21, 0x4e, 0x5f, 0xcf, 0xf7, 0x18, 0xe2,
	0x44, 0x38, 0xc4, 0x86, 0xc2, 0x46, 0x44, 0x7f, 0x69, 0x10, 0xef, 0x08, 0x17, 0xb9, 0x27, 0xb4,
	0xc4, 0x21, 0x43, 0xbc, 0x2d, 0x5c, 0xa4, 0xdf, 0x73, 0x27, 0x67, 0x92, 0xf6, 0x19, 0xe2, 0x47,
	0xa2, 0xc6, 0x6a, 0x67, 0xb4, 0xcc, 0x80, 0x21, 0x3e, 0x12, 0x35, 0x46, 0x3e, 0xe0, 0x81, 0x1b,
	0x19, 0x49, 0x87, 0x0c, 0x3d, 0x21, 0x7f, 0x75, 0xb1, 0x07, 0x01, 0x44, 0xb5, 0x00, 0x7e, 0x30,
	0x77, 0xb4, 0x91, 0x91, 0x74, 0xc4, 0xd0, 0x13, 0x13, 0xe8, 0xca, 0xbd, 0xbc, 0xc2, 0xbd, 0xea,
	0x3d, 0xa0, 0xf8, 0x78, 0xfe, 0x7e, 0xbe, 0x58, 0xde, 0x2e, 0x7f, 0xfb, 0x79, 0x7e, 0x7b, 0xbd,
	0xb8, 0x98, 0xbf, 0xbe, 0x5c, 0xcc, 0x2f, 0x46, 0x07, 0x84, 0xe0, 0xa1, 0xd3, 0x79, 0xbb, 0x98,
	0x8f, 0xbc, 0x07, 0x6c, 0xf9, 0xcb, 0xdb, 0x51, 0xe3, 0xfc, 0xfb, 0x9b, 0xd9, 0x36, 0x52, 0xe1,
	0xfd, 0xca, 0xbf, 0x4b, 0x93, 0xc9, 0x4f, 0xda, 0xe3, 0x3b, 0xe3, 0x71, 0x62, 0x3d, 0x4e, 0xac,
	0xc7, 0x49, 0xe5, 0x71, 0xa2, 0x3d, 0xae, 0xda, 0xa6, 0x7d, 0xf6, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xd4, 0x72, 0x6a, 0x76, 0x25, 0x08, 0x00, 0x00,
}
