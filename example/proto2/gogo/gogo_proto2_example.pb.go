// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gogo_proto2_example.proto

package gogo

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_EVENT_TYPE_UNDEFINED EventType = 0
	EventType_EVENT_TYPE_ONE       EventType = 1
	EventType_EVENT_TYPE_TWO       EventType = 2
)

var EventType_name = map[int32]string{
	0: "EVENT_TYPE_UNDEFINED",
	1: "EVENT_TYPE_ONE",
	2: "EVENT_TYPE_TWO",
}

var EventType_value = map[string]int32{
	"EVENT_TYPE_UNDEFINED": 0,
	"EVENT_TYPE_ONE":       1,
	"EVENT_TYPE_TWO":       2,
}

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (x *EventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EventType_value, data, "EventType")
	if err != nil {
		return err
	}
	*x = EventType(value)
	return nil
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed606ea34bb1ba6d, []int{0}
}

type BaseEvent struct {
	EventID                      *string    `protobuf:"bytes,1,req,name=eventID" json:"eventID,omitempty"`
	SourceID                     *string    `protobuf:"bytes,2,req,name=sourceID" json:"sourceID,omitempty"`
	Timestamp                    *uint64    `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
	EventType                    *EventType `protobuf:"varint,4,req,name=eventType,enum=crowdstrike.csproto.example.proto2.gogo.EventType" json:"eventType,omitempty"`
	Data                         []byte     `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}   `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *BaseEvent) Reset()         { *m = BaseEvent{} }
func (m *BaseEvent) String() string { return proto.CompactTextString(m) }
func (*BaseEvent) ProtoMessage()    {}
func (*BaseEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed606ea34bb1ba6d, []int{0}
}

var extRange_BaseEvent = []proto.ExtensionRange{
	{Start: 100, End: 536870911},
}

func (*BaseEvent) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_BaseEvent
}

func (m *BaseEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseEvent.Unmarshal(m, b)
}
func (m *BaseEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseEvent.Marshal(b, m, deterministic)
}
func (m *BaseEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseEvent.Merge(m, src)
}
func (m *BaseEvent) XXX_Size() int {
	return xxx_messageInfo_BaseEvent.Size(m)
}
func (m *BaseEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseEvent.DiscardUnknown(m)
}

var xxx_messageInfo_BaseEvent proto.InternalMessageInfo

func (m *BaseEvent) GetEventID() string {
	if m != nil && m.EventID != nil {
		return *m.EventID
	}
	return ""
}

func (m *BaseEvent) GetSourceID() string {
	if m != nil && m.SourceID != nil {
		return *m.SourceID
	}
	return ""
}

func (m *BaseEvent) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *BaseEvent) GetEventType() EventType {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return EventType_EVENT_TYPE_UNDEFINED
}

func (m *BaseEvent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type TestEvent struct {
	Name      *string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Info      *string        `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	IsAwesome *bool          `protobuf:"varint,3,opt,name=isAwesome" json:"isAwesome,omitempty"`
	Labels    []string       `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty"`
	Embedded  *EmbeddedEvent `protobuf:"bytes,5,req,name=embedded" json:"embedded,omitempty"`
	// Types that are valid to be assigned to Path:
	//	*TestEvent_Jedi
	//	*TestEvent_Sith
	//	*TestEvent_Other
	Path                 isTestEvent_Path     `protobuf_oneof:"path"`
	Nested               *TestEvent_NestedMsg `protobuf:"bytes,9,opt,name=nested" json:"nested,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TestEvent) Reset()         { *m = TestEvent{} }
func (m *TestEvent) String() string { return proto.CompactTextString(m) }
func (*TestEvent) ProtoMessage()    {}
func (*TestEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed606ea34bb1ba6d, []int{1}
}
func (m *TestEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestEvent.Unmarshal(m, b)
}
func (m *TestEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestEvent.Marshal(b, m, deterministic)
}
func (m *TestEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestEvent.Merge(m, src)
}
func (m *TestEvent) XXX_Size() int {
	return xxx_messageInfo_TestEvent.Size(m)
}
func (m *TestEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TestEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TestEvent proto.InternalMessageInfo

type isTestEvent_Path interface {
	isTestEvent_Path()
}

type TestEvent_Jedi struct {
	Jedi bool `protobuf:"varint,6,opt,name=jedi,oneof" json:"jedi,omitempty"`
}
type TestEvent_Sith struct {
	Sith bool `protobuf:"varint,7,opt,name=sith,oneof" json:"sith,omitempty"`
}
type TestEvent_Other struct {
	Other string `protobuf:"bytes,8,opt,name=other,oneof" json:"other,omitempty"`
}

func (*TestEvent_Jedi) isTestEvent_Path()  {}
func (*TestEvent_Sith) isTestEvent_Path()  {}
func (*TestEvent_Other) isTestEvent_Path() {}

func (m *TestEvent) GetPath() isTestEvent_Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *TestEvent) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TestEvent) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *TestEvent) GetIsAwesome() bool {
	if m != nil && m.IsAwesome != nil {
		return *m.IsAwesome
	}
	return false
}

func (m *TestEvent) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *TestEvent) GetEmbedded() *EmbeddedEvent {
	if m != nil {
		return m.Embedded
	}
	return nil
}

func (m *TestEvent) GetJedi() bool {
	if x, ok := m.GetPath().(*TestEvent_Jedi); ok {
		return x.Jedi
	}
	return false
}

func (m *TestEvent) GetSith() bool {
	if x, ok := m.GetPath().(*TestEvent_Sith); ok {
		return x.Sith
	}
	return false
}

func (m *TestEvent) GetOther() string {
	if x, ok := m.GetPath().(*TestEvent_Other); ok {
		return x.Other
	}
	return ""
}

func (m *TestEvent) GetNested() *TestEvent_NestedMsg {
	if m != nil {
		return m.Nested
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TestEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TestEvent_Jedi)(nil),
		(*TestEvent_Sith)(nil),
		(*TestEvent_Other)(nil),
	}
}

var E_TestEvent_EventExt = &proto.ExtensionDesc{
	ExtendedType:  (*BaseEvent)(nil),
	ExtensionType: (*TestEvent)(nil),
	Field:         100,
	Name:          "crowdstrike.csproto.example.proto2.gogo.TestEvent.eventExt",
	Tag:           "bytes,100,opt,name=eventExt",
	Filename:      "gogo_proto2_example.proto",
}

type TestEvent_NestedMsg struct {
	Details              *string  `protobuf:"bytes,1,opt,name=details" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestEvent_NestedMsg) Reset()         { *m = TestEvent_NestedMsg{} }
func (m *TestEvent_NestedMsg) String() string { return proto.CompactTextString(m) }
func (*TestEvent_NestedMsg) ProtoMessage()    {}
func (*TestEvent_NestedMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed606ea34bb1ba6d, []int{1, 0}
}
func (m *TestEvent_NestedMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestEvent_NestedMsg.Unmarshal(m, b)
}
func (m *TestEvent_NestedMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestEvent_NestedMsg.Marshal(b, m, deterministic)
}
func (m *TestEvent_NestedMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestEvent_NestedMsg.Merge(m, src)
}
func (m *TestEvent_NestedMsg) XXX_Size() int {
	return xxx_messageInfo_TestEvent_NestedMsg.Size(m)
}
func (m *TestEvent_NestedMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_TestEvent_NestedMsg.DiscardUnknown(m)
}

var xxx_messageInfo_TestEvent_NestedMsg proto.InternalMessageInfo

func (m *TestEvent_NestedMsg) GetDetails() string {
	if m != nil && m.Details != nil {
		return *m.Details
	}
	return ""
}

type EmbeddedEvent struct {
	ID                   *int32   `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	Stuff                *string  `protobuf:"bytes,2,opt,name=stuff" json:"stuff,omitempty"`
	FavoriteNumbers      []int32  `protobuf:"varint,3,rep,name=favoriteNumbers" json:"favoriteNumbers,omitempty"`
	RandomThings         [][]byte `protobuf:"bytes,4,rep,name=randomThings" json:"randomThings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmbeddedEvent) Reset()         { *m = EmbeddedEvent{} }
func (m *EmbeddedEvent) String() string { return proto.CompactTextString(m) }
func (*EmbeddedEvent) ProtoMessage()    {}
func (*EmbeddedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed606ea34bb1ba6d, []int{2}
}
func (m *EmbeddedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmbeddedEvent.Unmarshal(m, b)
}
func (m *EmbeddedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmbeddedEvent.Marshal(b, m, deterministic)
}
func (m *EmbeddedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmbeddedEvent.Merge(m, src)
}
func (m *EmbeddedEvent) XXX_Size() int {
	return xxx_messageInfo_EmbeddedEvent.Size(m)
}
func (m *EmbeddedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_EmbeddedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_EmbeddedEvent proto.InternalMessageInfo

func (m *EmbeddedEvent) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *EmbeddedEvent) GetStuff() string {
	if m != nil && m.Stuff != nil {
		return *m.Stuff
	}
	return ""
}

func (m *EmbeddedEvent) GetFavoriteNumbers() []int32 {
	if m != nil {
		return m.FavoriteNumbers
	}
	return nil
}

func (m *EmbeddedEvent) GetRandomThings() [][]byte {
	if m != nil {
		return m.RandomThings
	}
	return nil
}

type AllTheThings struct {
	ID                   *int32         `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	TheString            *string        `protobuf:"bytes,2,opt,name=theString" json:"theString,omitempty"`
	TheBool              *bool          `protobuf:"varint,3,opt,name=theBool" json:"theBool,omitempty"`
	TheInt32             *int32         `protobuf:"varint,4,opt,name=theInt32" json:"theInt32,omitempty"`
	TheInt64             *int64         `protobuf:"varint,5,opt,name=theInt64" json:"theInt64,omitempty"`
	TheUInt32            *uint32        `protobuf:"varint,6,opt,name=theUInt32" json:"theUInt32,omitempty"`
	TheUInt64            *uint64        `protobuf:"varint,7,opt,name=theUInt64" json:"theUInt64,omitempty"`
	TheSInt32            *int32         `protobuf:"zigzag32,8,opt,name=theSInt32" json:"theSInt32,omitempty"`
	TheSInt64            *int64         `protobuf:"zigzag64,9,opt,name=theSInt64" json:"theSInt64,omitempty"`
	TheFixed32           *uint32        `protobuf:"fixed32,10,opt,name=theFixed32" json:"theFixed32,omitempty"`
	TheFixed64           *uint64        `protobuf:"fixed64,11,opt,name=theFixed64" json:"theFixed64,omitempty"`
	TheSFixed32          *int32         `protobuf:"fixed32,12,opt,name=theSFixed32" json:"theSFixed32,omitempty"`
	TheSFixed64          *int64         `protobuf:"fixed64,13,opt,name=theSFixed64" json:"theSFixed64,omitempty"`
	TheFloat             *float32       `protobuf:"fixed32,14,opt,name=theFloat" json:"theFloat,omitempty"`
	TheDouble            *float64       `protobuf:"fixed64,15,opt,name=theDouble" json:"theDouble,omitempty"`
	TheEventType         *EventType     `protobuf:"varint,16,opt,name=theEventType,enum=crowdstrike.csproto.example.proto2.gogo.EventType" json:"theEventType,omitempty"`
	TheBytes             []byte         `protobuf:"bytes,17,opt,name=theBytes" json:"theBytes,omitempty"`
	TheMessage           *EmbeddedEvent `protobuf:"bytes,18,opt,name=theMessage" json:"theMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AllTheThings) Reset()         { *m = AllTheThings{} }
func (m *AllTheThings) String() string { return proto.CompactTextString(m) }
func (*AllTheThings) ProtoMessage()    {}
func (*AllTheThings) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed606ea34bb1ba6d, []int{3}
}
func (m *AllTheThings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllTheThings.Unmarshal(m, b)
}
func (m *AllTheThings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllTheThings.Marshal(b, m, deterministic)
}
func (m *AllTheThings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllTheThings.Merge(m, src)
}
func (m *AllTheThings) XXX_Size() int {
	return xxx_messageInfo_AllTheThings.Size(m)
}
func (m *AllTheThings) XXX_DiscardUnknown() {
	xxx_messageInfo_AllTheThings.DiscardUnknown(m)
}

var xxx_messageInfo_AllTheThings proto.InternalMessageInfo

func (m *AllTheThings) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *AllTheThings) GetTheString() string {
	if m != nil && m.TheString != nil {
		return *m.TheString
	}
	return ""
}

func (m *AllTheThings) GetTheBool() bool {
	if m != nil && m.TheBool != nil {
		return *m.TheBool
	}
	return false
}

func (m *AllTheThings) GetTheInt32() int32 {
	if m != nil && m.TheInt32 != nil {
		return *m.TheInt32
	}
	return 0
}

func (m *AllTheThings) GetTheInt64() int64 {
	if m != nil && m.TheInt64 != nil {
		return *m.TheInt64
	}
	return 0
}

func (m *AllTheThings) GetTheUInt32() uint32 {
	if m != nil && m.TheUInt32 != nil {
		return *m.TheUInt32
	}
	return 0
}

func (m *AllTheThings) GetTheUInt64() uint64 {
	if m != nil && m.TheUInt64 != nil {
		return *m.TheUInt64
	}
	return 0
}

func (m *AllTheThings) GetTheSInt32() int32 {
	if m != nil && m.TheSInt32 != nil {
		return *m.TheSInt32
	}
	return 0
}

func (m *AllTheThings) GetTheSInt64() int64 {
	if m != nil && m.TheSInt64 != nil {
		return *m.TheSInt64
	}
	return 0
}

func (m *AllTheThings) GetTheFixed32() uint32 {
	if m != nil && m.TheFixed32 != nil {
		return *m.TheFixed32
	}
	return 0
}

func (m *AllTheThings) GetTheFixed64() uint64 {
	if m != nil && m.TheFixed64 != nil {
		return *m.TheFixed64
	}
	return 0
}

func (m *AllTheThings) GetTheSFixed32() int32 {
	if m != nil && m.TheSFixed32 != nil {
		return *m.TheSFixed32
	}
	return 0
}

func (m *AllTheThings) GetTheSFixed64() int64 {
	if m != nil && m.TheSFixed64 != nil {
		return *m.TheSFixed64
	}
	return 0
}

func (m *AllTheThings) GetTheFloat() float32 {
	if m != nil && m.TheFloat != nil {
		return *m.TheFloat
	}
	return 0
}

func (m *AllTheThings) GetTheDouble() float64 {
	if m != nil && m.TheDouble != nil {
		return *m.TheDouble
	}
	return 0
}

func (m *AllTheThings) GetTheEventType() EventType {
	if m != nil && m.TheEventType != nil {
		return *m.TheEventType
	}
	return EventType_EVENT_TYPE_UNDEFINED
}

func (m *AllTheThings) GetTheBytes() []byte {
	if m != nil {
		return m.TheBytes
	}
	return nil
}

func (m *AllTheThings) GetTheMessage() *EmbeddedEvent {
	if m != nil {
		return m.TheMessage
	}
	return nil
}

type RepeatAllTheThings struct {
	ID                   *int32           `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	TheStrings           []string         `protobuf:"bytes,2,rep,name=theStrings" json:"theStrings,omitempty"`
	TheBools             []bool           `protobuf:"varint,3,rep,name=theBools" json:"theBools,omitempty"`
	TheInt32S            []int32          `protobuf:"varint,4,rep,name=theInt32s" json:"theInt32s,omitempty"`
	TheInt64S            []int64          `protobuf:"varint,5,rep,name=theInt64s" json:"theInt64s,omitempty"`
	TheUInt32S           []uint32         `protobuf:"varint,6,rep,name=theUInt32s" json:"theUInt32s,omitempty"`
	TheUInt64S           []uint64         `protobuf:"varint,7,rep,name=theUInt64s" json:"theUInt64s,omitempty"`
	TheSInt32S           []int32          `protobuf:"zigzag32,8,rep,name=theSInt32s" json:"theSInt32s,omitempty"`
	TheSInt64S           []int64          `protobuf:"zigzag64,9,rep,name=theSInt64s" json:"theSInt64s,omitempty"`
	TheFixed32S          []uint32         `protobuf:"fixed32,10,rep,name=theFixed32s" json:"theFixed32s,omitempty"`
	TheFixed64S          []uint64         `protobuf:"fixed64,11,rep,name=theFixed64s" json:"theFixed64s,omitempty"`
	TheSFixed32S         []int32          `protobuf:"fixed32,12,rep,name=theSFixed32s" json:"theSFixed32s,omitempty"`
	TheSFixed64S         []int64          `protobuf:"fixed64,13,rep,name=theSFixed64s" json:"theSFixed64s,omitempty"`
	TheFloats            []float32        `protobuf:"fixed32,14,rep,name=theFloats" json:"theFloats,omitempty"`
	TheDoubles           []float64        `protobuf:"fixed64,15,rep,name=theDoubles" json:"theDoubles,omitempty"`
	TheEventTypes        []EventType      `protobuf:"varint,16,rep,name=theEventTypes,enum=crowdstrike.csproto.example.proto2.gogo.EventType" json:"theEventTypes,omitempty"`
	TheBytes             [][]byte         `protobuf:"bytes,17,rep,name=theBytes" json:"theBytes,omitempty"`
	TheMessages          []*EmbeddedEvent `protobuf:"bytes,18,rep,name=theMessages" json:"theMessages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RepeatAllTheThings) Reset()         { *m = RepeatAllTheThings{} }
func (m *RepeatAllTheThings) String() string { return proto.CompactTextString(m) }
func (*RepeatAllTheThings) ProtoMessage()    {}
func (*RepeatAllTheThings) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed606ea34bb1ba6d, []int{4}
}
func (m *RepeatAllTheThings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatAllTheThings.Unmarshal(m, b)
}
func (m *RepeatAllTheThings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatAllTheThings.Marshal(b, m, deterministic)
}
func (m *RepeatAllTheThings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatAllTheThings.Merge(m, src)
}
func (m *RepeatAllTheThings) XXX_Size() int {
	return xxx_messageInfo_RepeatAllTheThings.Size(m)
}
func (m *RepeatAllTheThings) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatAllTheThings.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatAllTheThings proto.InternalMessageInfo

func (m *RepeatAllTheThings) GetID() int32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *RepeatAllTheThings) GetTheStrings() []string {
	if m != nil {
		return m.TheStrings
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheBools() []bool {
	if m != nil {
		return m.TheBools
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheInt32S() []int32 {
	if m != nil {
		return m.TheInt32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheInt64S() []int64 {
	if m != nil {
		return m.TheInt64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheUInt32S() []uint32 {
	if m != nil {
		return m.TheUInt32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheUInt64S() []uint64 {
	if m != nil {
		return m.TheUInt64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheSInt32S() []int32 {
	if m != nil {
		return m.TheSInt32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheSInt64S() []int64 {
	if m != nil {
		return m.TheSInt64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheFixed32S() []uint32 {
	if m != nil {
		return m.TheFixed32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheFixed64S() []uint64 {
	if m != nil {
		return m.TheFixed64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheSFixed32S() []int32 {
	if m != nil {
		return m.TheSFixed32S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheSFixed64S() []int64 {
	if m != nil {
		return m.TheSFixed64S
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheFloats() []float32 {
	if m != nil {
		return m.TheFloats
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheDoubles() []float64 {
	if m != nil {
		return m.TheDoubles
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheEventTypes() []EventType {
	if m != nil {
		return m.TheEventTypes
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheBytes() [][]byte {
	if m != nil {
		return m.TheBytes
	}
	return nil
}

func (m *RepeatAllTheThings) GetTheMessages() []*EmbeddedEvent {
	if m != nil {
		return m.TheMessages
	}
	return nil
}

func init() {
	proto.RegisterEnum("crowdstrike.csproto.example.proto2.gogo.EventType", EventType_name, EventType_value)
	proto.RegisterType((*BaseEvent)(nil), "crowdstrike.csproto.example.proto2.gogo.BaseEvent")
	proto.RegisterExtension(E_TestEvent_EventExt)
	proto.RegisterType((*TestEvent)(nil), "crowdstrike.csproto.example.proto2.gogo.TestEvent")
	proto.RegisterType((*TestEvent_NestedMsg)(nil), "crowdstrike.csproto.example.proto2.gogo.TestEvent.NestedMsg")
	proto.RegisterType((*EmbeddedEvent)(nil), "crowdstrike.csproto.example.proto2.gogo.EmbeddedEvent")
	proto.RegisterType((*AllTheThings)(nil), "crowdstrike.csproto.example.proto2.gogo.AllTheThings")
	proto.RegisterType((*RepeatAllTheThings)(nil), "crowdstrike.csproto.example.proto2.gogo.RepeatAllTheThings")
}

func init() { proto.RegisterFile("gogo_proto2_example.proto", fileDescriptor_ed606ea34bb1ba6d) }

var fileDescriptor_ed606ea34bb1ba6d = []byte{
	// 967 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xc1, 0x6e, 0xe3, 0x36,
	0x13, 0xc7, 0x23, 0x51, 0x72, 0x2c, 0xc6, 0x4e, 0x1c, 0x22, 0x58, 0xf0, 0x5b, 0x7c, 0x28, 0x08,
	0x03, 0x45, 0x89, 0x3d, 0x38, 0x80, 0xd6, 0xf0, 0xa9, 0x97, 0x4d, 0xed, 0x60, 0x73, 0x88, 0x77,
	0x31, 0xeb, 0xa4, 0xdb, 0x5e, 0x02, 0x25, 0x62, 0x2c, 0xb5, 0xb6, 0x65, 0x98, 0xcc, 0x6e, 0xf6,
	0x16, 0xb4, 0xc7, 0x5e, 0xfa, 0x34, 0x7d, 0x8d, 0xbe, 0x52, 0x41, 0x8a, 0x96, 0xa8, 0x14, 0x28,
	0xd2, 0xf4, 0xc6, 0xf9, 0x0d, 0x67, 0xf4, 0xe7, 0xe8, 0x4f, 0xe2, 0xff, 0xcd, 0x8b, 0x79, 0x71,
	0xb5, 0xde, 0x14, 0xaa, 0x88, 0xaf, 0xc4, 0x7d, 0xb2, 0x5c, 0x2f, 0xc4, 0xc0, 0x84, 0xe4, 0x9b,
	0x9b, 0x4d, 0xf1, 0x39, 0x95, 0x6a, 0x93, 0xff, 0x2c, 0x06, 0x37, 0xd2, 0xc0, 0x41, 0x63, 0x4b,
	0x3c, 0xd0, 0xd5, 0xfd, 0x3f, 0x3d, 0x1c, 0x9d, 0x24, 0x52, 0x4c, 0x3e, 0x89, 0x95, 0x22, 0x14,
	0xef, 0x0a, 0xbd, 0x38, 0x1b, 0x53, 0x8f, 0xf9, 0x3c, 0x82, 0x6d, 0x48, 0x5e, 0xe2, 0xb6, 0x2c,
	0xee, 0x36, 0x37, 0xe2, 0x6c, 0x4c, 0x7d, 0x93, 0xaa, 0x62, 0xf2, 0x7f, 0x1c, 0xa9, 0x7c, 0x29,
	0xa4, 0x4a, 0x96, 0x6b, 0x8a, 0x98, 0xcf, 0x03, 0xa8, 0x01, 0x79, 0x8f, 0x23, 0xd3, 0x64, 0xf6,
	0x65, 0x2d, 0x68, 0xc0, 0x7c, 0xbe, 0x1f, 0xc7, 0x83, 0x27, 0xca, 0x1b, 0x4c, 0xb6, 0x95, 0x50,
	0x37, 0x21, 0x04, 0x07, 0x69, 0xa2, 0x12, 0x1a, 0x32, 0x8f, 0x77, 0xc0, 0xac, 0x5f, 0xb5, 0xdb,
	0x69, 0xef, 0xe1, 0xe1, 0xe1, 0xc1, 0xef, 0xff, 0x16, 0xe0, 0x68, 0x26, 0xa4, 0x2a, 0x4f, 0x44,
	0x70, 0xb0, 0x4a, 0x96, 0x82, 0x7a, 0xcc, 0xe3, 0x11, 0x98, 0xb5, 0x66, 0xf9, 0xea, 0xb6, 0xa0,
	0x7e, 0xc9, 0xf4, 0x5a, 0x9f, 0x21, 0x97, 0x6f, 0x3e, 0x0b, 0x59, 0x2c, 0x05, 0x45, 0xcc, 0xe3,
	0x6d, 0xa8, 0x01, 0x79, 0x81, 0x5b, 0x8b, 0xe4, 0x5a, 0x2c, 0x24, 0x0d, 0x18, 0xe2, 0x11, 0xd8,
	0x88, 0x00, 0x6e, 0x8b, 0xe5, 0xb5, 0x48, 0x53, 0x91, 0xd2, 0x90, 0xf9, 0x7c, 0x2f, 0x1e, 0x3d,
	0xfd, 0x68, 0xb6, 0xd0, 0xe8, 0x84, 0xaa, 0x0f, 0x39, 0xc2, 0xc1, 0x4f, 0x22, 0xcd, 0x69, 0x4b,
	0x8b, 0x78, 0xbb, 0x03, 0x26, 0xd2, 0x54, 0xe6, 0x2a, 0xa3, 0xbb, 0x5b, 0xaa, 0x23, 0xf2, 0x02,
	0x87, 0x85, 0xca, 0xc4, 0x86, 0xb6, 0xf5, 0x51, 0xde, 0xee, 0x40, 0x19, 0x92, 0x19, 0x6e, 0xad,
	0x84, 0x54, 0x22, 0xa5, 0x11, 0xf3, 0xf8, 0x5e, 0xfc, 0xed, 0x93, 0x55, 0x55, 0x93, 0x1b, 0x4c,
	0x4d, 0x83, 0x73, 0x39, 0x07, 0xdb, 0xeb, 0xe5, 0xd7, 0x38, 0xaa, 0xa0, 0xb6, 0x4a, 0x2a, 0x54,
	0x92, 0x2f, 0xa4, 0x9d, 0xed, 0x36, 0x8c, 0x7f, 0xf1, 0x70, 0xdb, 0xfc, 0xac, 0xc9, 0xbd, 0x22,
	0x4f, 0xff, 0xd5, 0x95, 0x0b, 0x69, 0x6a, 0x34, 0xc7, 0xff, 0x5e, 0x33, 0x54, 0xdf, 0x3d, 0x69,
	0xe1, 0x60, 0x9d, 0xa8, 0xac, 0xff, 0xab, 0x87, 0xbb, 0x8d, 0x49, 0x93, 0x7d, 0xec, 0x5b, 0x7b,
	0x87, 0xe0, 0x9f, 0x8d, 0xc9, 0x11, 0x0e, 0xa5, 0xba, 0xbb, 0xbd, 0xb5, 0x76, 0x28, 0x03, 0xc2,
	0xf1, 0xc1, 0x6d, 0xf2, 0xa9, 0xd8, 0xe4, 0x4a, 0x4c, 0xef, 0x96, 0xd7, 0x62, 0x23, 0x29, 0x62,
	0x88, 0x87, 0xf0, 0x18, 0x93, 0x3e, 0xee, 0x6c, 0x92, 0x55, 0x5a, 0x2c, 0x67, 0x59, 0xbe, 0x9a,
	0x97, 0x0e, 0xe9, 0x40, 0x83, 0xf5, 0x7f, 0x0f, 0x71, 0xe7, 0xcd, 0x62, 0x31, 0xcb, 0x44, 0x09,
	0xfe, 0x26, 0x42, 0x5f, 0xa1, 0x4c, 0x7c, 0x50, 0x9b, 0x7c, 0x35, 0xb7, 0x42, 0x6a, 0xa0, 0x67,
	0xad, 0x32, 0x71, 0x52, 0x14, 0x0b, 0x6b, 0xcd, 0x6d, 0xa8, 0xaf, 0xa5, 0xca, 0xc4, 0xd9, 0x4a,
	0xbd, 0x8e, 0x69, 0xc0, 0x3c, 0x1e, 0x42, 0x15, 0xd7, 0xb9, 0xd1, 0xd0, 0x5c, 0x15, 0x04, 0x55,
	0x6c, 0xbf, 0x77, 0x51, 0x16, 0x6a, 0xa7, 0x75, 0xa1, 0x06, 0x4e, 0x76, 0x34, 0x34, 0x8e, 0x0b,
	0xa0, 0x06, 0x5b, 0xad, 0x65, 0xad, 0x36, 0xde, 0x21, 0xd4, 0xc0, 0xc9, 0x8e, 0x86, 0xc6, 0x7d,
	0x04, 0x6a, 0x40, 0xbe, 0xc2, 0x58, 0x65, 0xe2, 0x34, 0xbf, 0x17, 0xe9, 0xeb, 0x98, 0x62, 0xe6,
	0xf1, 0x5d, 0x70, 0x88, 0x9b, 0x1f, 0x0d, 0xe9, 0x1e, 0xf3, 0x78, 0x0b, 0x1c, 0x42, 0x18, 0xde,
	0xd3, 0xcd, 0xb6, 0x0d, 0x3a, 0xcc, 0xe3, 0x07, 0xe0, 0xa2, 0xc6, 0x8e, 0xd1, 0x90, 0x76, 0x99,
	0xc7, 0x7b, 0xe0, 0x22, 0x3b, 0x97, 0xd3, 0x45, 0x91, 0x28, 0xba, 0xcf, 0x3c, 0xee, 0x43, 0x15,
	0x5b, 0xf5, 0xe3, 0xe2, 0xee, 0x7a, 0x21, 0xe8, 0x01, 0xf3, 0xb8, 0x07, 0x35, 0x20, 0x97, 0xb8,
	0xa3, 0x32, 0x51, 0xbd, 0x49, 0xb4, 0xc7, 0xbc, 0x67, 0xbe, 0x66, 0x8d, 0x3e, 0x56, 0xd1, 0xc9,
	0x17, 0x25, 0x24, 0x3d, 0x34, 0x8f, 0x5a, 0x15, 0x93, 0x4b, 0x33, 0x91, 0x73, 0x21, 0x65, 0x32,
	0x17, 0x94, 0x98, 0xab, 0xf1, 0xdc, 0x47, 0xc6, 0xe9, 0xd4, 0xff, 0x23, 0xc4, 0x04, 0xc4, 0x5a,
	0x24, 0xea, 0x1f, 0x8d, 0x59, 0xfe, 0x90, 0xd2, 0x87, 0x92, 0xfa, 0xe6, 0xf5, 0x73, 0xc8, 0x56,
	0x7a, 0x51, 0x2c, 0xca, 0x0b, 0xd2, 0x86, 0x2a, 0xb6, 0xc3, 0x34, 0xb6, 0x28, 0xaf, 0x45, 0x08,
	0x35, 0xa8, 0xb3, 0xa3, 0xa1, 0xa4, 0x21, 0x43, 0x1c, 0x41, 0x0d, 0xec, 0x77, 0x2f, 0x6c, 0x71,
	0x8b, 0x21, 0xde, 0x05, 0x87, 0x38, 0x79, 0x5d, 0xbe, 0xcb, 0x10, 0x0f, 0xc0, 0x21, 0x5b, 0xdd,
	0xb6, 0xbe, 0xcd, 0x10, 0x3f, 0x04, 0x87, 0x38, 0x79, 0x5d, 0x1f, 0x31, 0xc4, 0x09, 0x38, 0xc4,
	0xda, 0xc8, 0x9a, 0x4a, 0x52, 0xcc, 0x10, 0xdf, 0x05, 0x17, 0xb9, 0x3b, 0x74, 0x8b, 0x3d, 0x86,
	0x78, 0x0b, 0x5c, 0xa4, 0x5f, 0x06, 0xc7, 0x99, 0x92, 0x76, 0x18, 0xe2, 0x07, 0xd0, 0x60, 0x8d,
	0x3d, 0xba, 0x4d, 0x97, 0x21, 0xde, 0x83, 0x06, 0xb3, 0x93, 0x32, 0x06, 0x95, 0x74, 0x9f, 0x21,
	0xee, 0x43, 0x0d, 0xec, 0x49, 0x4a, 0x87, 0x4a, 0x7a, 0xc0, 0x10, 0xf7, 0xc0, 0x21, 0xe4, 0x23,
	0xee, 0xba, 0x66, 0x93, 0xb4, 0xc7, 0xd0, 0x33, 0x5d, 0xdb, 0x6c, 0xf4, 0xc8, 0xb6, 0xa8, 0x61,
	0xdb, 0x8f, 0x66, 0x3a, 0xd6, 0x6c, 0x92, 0x12, 0x86, 0xfe, 0x83, 0x6f, 0xdd, 0x56, 0xaf, 0xce,
	0x71, 0x54, 0xdf, 0x1c, 0x8a, 0x8f, 0x26, 0x97, 0x93, 0xe9, 0xec, 0x6a, 0xf6, 0xc3, 0xfb, 0xc9,
	0xd5, 0xc5, 0x74, 0x3c, 0x39, 0x3d, 0x9b, 0x4e, 0xc6, 0xbd, 0x1d, 0x42, 0xf0, 0xbe, 0x93, 0x79,
	0x37, 0x9d, 0xf4, 0xbc, 0x47, 0x6c, 0xf6, 0xfd, 0xbb, 0x9e, 0x7f, 0x32, 0xfc, 0x31, 0x9e, 0xe7,
	0x2a, 0xbb, 0xbb, 0x1e, 0xdc, 0x14, 0xcb, 0xe3, 0xef, 0xb4, 0xbe, 0x0f, 0x46, 0xdf, 0xb1, 0xd5,
	0x77, 0x6c, 0xf5, 0x1d, 0x97, 0xfa, 0x8e, 0xb5, 0xbe, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2f,
	0x07, 0xf7, 0xd8, 0x7b, 0x09, 0x00, 0x00,
}
