// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0
// source: googlev1_proto2_example.proto

package googlev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EVENT_TYPE_UNDEFINED EventType = 0
	EventType_EVENT_TYPE_ONE       EventType = 1
	EventType_EVENT_TYPE_TWO       EventType = 2
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNDEFINED",
		1: "EVENT_TYPE_ONE",
		2: "EVENT_TYPE_TWO",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNDEFINED": 0,
		"EVENT_TYPE_ONE":       1,
		"EVENT_TYPE_TWO":       2,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_googlev1_proto2_example_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_googlev1_proto2_example_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EventType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EventType(num)
	return nil
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{0}
}

type BaseEvent struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	EventID   *string    `protobuf:"bytes,1,req,name=eventID" json:"eventID,omitempty"`
	SourceID  *string    `protobuf:"bytes,2,req,name=sourceID" json:"sourceID,omitempty"`
	Timestamp *uint64    `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
	EventType *EventType `protobuf:"varint,4,req,name=eventType,enum=crowdstrike.csproto.example.proto2.googlev1.EventType" json:"eventType,omitempty"`
	Data      []byte     `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
}

func (x *BaseEvent) Reset() {
	*x = BaseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseEvent) ProtoMessage() {}

func (x *BaseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseEvent.ProtoReflect.Descriptor instead.
func (*BaseEvent) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{0}
}

func (x *BaseEvent) GetEventID() string {
	if x != nil && x.EventID != nil {
		return *x.EventID
	}
	return ""
}

func (x *BaseEvent) GetSourceID() string {
	if x != nil && x.SourceID != nil {
		return *x.SourceID
	}
	return ""
}

func (x *BaseEvent) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *BaseEvent) GetEventType() EventType {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return EventType_EVENT_TYPE_UNDEFINED
}

func (x *BaseEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TestEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Info      *string        `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	IsAwesome *bool          `protobuf:"varint,3,opt,name=isAwesome" json:"isAwesome,omitempty"`
	Labels    []string       `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty"`
	Embedded  *EmbeddedEvent `protobuf:"bytes,5,req,name=embedded" json:"embedded,omitempty"`
	// Types that are assignable to Path:
	//
	//	*TestEvent_Jedi
	//	*TestEvent_Sith
	//	*TestEvent_Other
	Path   isTestEvent_Path     `protobuf_oneof:"path"`
	Nested *TestEvent_NestedMsg `protobuf:"bytes,9,opt,name=nested" json:"nested,omitempty"`
}

func (x *TestEvent) Reset() {
	*x = TestEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestEvent) ProtoMessage() {}

func (x *TestEvent) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestEvent.ProtoReflect.Descriptor instead.
func (*TestEvent) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{1}
}

func (x *TestEvent) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TestEvent) GetInfo() string {
	if x != nil && x.Info != nil {
		return *x.Info
	}
	return ""
}

func (x *TestEvent) GetIsAwesome() bool {
	if x != nil && x.IsAwesome != nil {
		return *x.IsAwesome
	}
	return false
}

func (x *TestEvent) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *TestEvent) GetEmbedded() *EmbeddedEvent {
	if x != nil {
		return x.Embedded
	}
	return nil
}

func (m *TestEvent) GetPath() isTestEvent_Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (x *TestEvent) GetJedi() bool {
	if x, ok := x.GetPath().(*TestEvent_Jedi); ok {
		return x.Jedi
	}
	return false
}

func (x *TestEvent) GetSith() bool {
	if x, ok := x.GetPath().(*TestEvent_Sith); ok {
		return x.Sith
	}
	return false
}

func (x *TestEvent) GetOther() string {
	if x, ok := x.GetPath().(*TestEvent_Other); ok {
		return x.Other
	}
	return ""
}

func (x *TestEvent) GetNested() *TestEvent_NestedMsg {
	if x != nil {
		return x.Nested
	}
	return nil
}

type isTestEvent_Path interface {
	isTestEvent_Path()
}

type TestEvent_Jedi struct {
	Jedi bool `protobuf:"varint,6,opt,name=jedi,oneof"`
}

type TestEvent_Sith struct {
	Sith bool `protobuf:"varint,7,opt,name=sith,oneof"`
}

type TestEvent_Other struct {
	Other string `protobuf:"bytes,8,opt,name=other,oneof"`
}

func (*TestEvent_Jedi) isTestEvent_Path() {}

func (*TestEvent_Sith) isTestEvent_Path() {}

func (*TestEvent_Other) isTestEvent_Path() {}

type EmbeddedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              *int32   `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	Stuff           *string  `protobuf:"bytes,2,opt,name=stuff" json:"stuff,omitempty"`
	FavoriteNumbers []int32  `protobuf:"varint,3,rep,name=favoriteNumbers" json:"favoriteNumbers,omitempty"`
	RandomThings    [][]byte `protobuf:"bytes,4,rep,name=randomThings" json:"randomThings,omitempty"`
}

func (x *EmbeddedEvent) Reset() {
	*x = EmbeddedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedEvent) ProtoMessage() {}

func (x *EmbeddedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedEvent.ProtoReflect.Descriptor instead.
func (*EmbeddedEvent) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{2}
}

func (x *EmbeddedEvent) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *EmbeddedEvent) GetStuff() string {
	if x != nil && x.Stuff != nil {
		return *x.Stuff
	}
	return ""
}

func (x *EmbeddedEvent) GetFavoriteNumbers() []int32 {
	if x != nil {
		return x.FavoriteNumbers
	}
	return nil
}

func (x *EmbeddedEvent) GetRandomThings() [][]byte {
	if x != nil {
		return x.RandomThings
	}
	return nil
}

type AllTheThings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           *int32         `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	TheString    *string        `protobuf:"bytes,2,opt,name=theString" json:"theString,omitempty"`
	TheBool      *bool          `protobuf:"varint,3,opt,name=theBool" json:"theBool,omitempty"`
	TheInt32     *int32         `protobuf:"varint,4,opt,name=theInt32" json:"theInt32,omitempty"`
	TheInt64     *int64         `protobuf:"varint,5,opt,name=theInt64" json:"theInt64,omitempty"`
	TheUInt32    *uint32        `protobuf:"varint,6,opt,name=theUInt32" json:"theUInt32,omitempty"`
	TheUInt64    *uint64        `protobuf:"varint,7,opt,name=theUInt64" json:"theUInt64,omitempty"`
	TheSInt32    *int32         `protobuf:"zigzag32,8,opt,name=theSInt32" json:"theSInt32,omitempty"`
	TheSInt64    *int64         `protobuf:"zigzag64,9,opt,name=theSInt64" json:"theSInt64,omitempty"`
	TheFixed32   *uint32        `protobuf:"fixed32,10,opt,name=theFixed32" json:"theFixed32,omitempty"`
	TheFixed64   *uint64        `protobuf:"fixed64,11,opt,name=theFixed64" json:"theFixed64,omitempty"`
	TheSFixed32  *int32         `protobuf:"fixed32,12,opt,name=theSFixed32" json:"theSFixed32,omitempty"`
	TheSFixed64  *int64         `protobuf:"fixed64,13,opt,name=theSFixed64" json:"theSFixed64,omitempty"`
	TheFloat     *float32       `protobuf:"fixed32,14,opt,name=theFloat" json:"theFloat,omitempty"`
	TheDouble    *float64       `protobuf:"fixed64,15,opt,name=theDouble" json:"theDouble,omitempty"`
	TheEventType *EventType     `protobuf:"varint,16,opt,name=theEventType,enum=crowdstrike.csproto.example.proto2.googlev1.EventType" json:"theEventType,omitempty"`
	TheBytes     []byte         `protobuf:"bytes,17,opt,name=theBytes" json:"theBytes,omitempty"`
	TheMessage   *EmbeddedEvent `protobuf:"bytes,18,opt,name=theMessage" json:"theMessage,omitempty"`
}

func (x *AllTheThings) Reset() {
	*x = AllTheThings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTheThings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTheThings) ProtoMessage() {}

func (x *AllTheThings) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTheThings.ProtoReflect.Descriptor instead.
func (*AllTheThings) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{3}
}

func (x *AllTheThings) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *AllTheThings) GetTheString() string {
	if x != nil && x.TheString != nil {
		return *x.TheString
	}
	return ""
}

func (x *AllTheThings) GetTheBool() bool {
	if x != nil && x.TheBool != nil {
		return *x.TheBool
	}
	return false
}

func (x *AllTheThings) GetTheInt32() int32 {
	if x != nil && x.TheInt32 != nil {
		return *x.TheInt32
	}
	return 0
}

func (x *AllTheThings) GetTheInt64() int64 {
	if x != nil && x.TheInt64 != nil {
		return *x.TheInt64
	}
	return 0
}

func (x *AllTheThings) GetTheUInt32() uint32 {
	if x != nil && x.TheUInt32 != nil {
		return *x.TheUInt32
	}
	return 0
}

func (x *AllTheThings) GetTheUInt64() uint64 {
	if x != nil && x.TheUInt64 != nil {
		return *x.TheUInt64
	}
	return 0
}

func (x *AllTheThings) GetTheSInt32() int32 {
	if x != nil && x.TheSInt32 != nil {
		return *x.TheSInt32
	}
	return 0
}

func (x *AllTheThings) GetTheSInt64() int64 {
	if x != nil && x.TheSInt64 != nil {
		return *x.TheSInt64
	}
	return 0
}

func (x *AllTheThings) GetTheFixed32() uint32 {
	if x != nil && x.TheFixed32 != nil {
		return *x.TheFixed32
	}
	return 0
}

func (x *AllTheThings) GetTheFixed64() uint64 {
	if x != nil && x.TheFixed64 != nil {
		return *x.TheFixed64
	}
	return 0
}

func (x *AllTheThings) GetTheSFixed32() int32 {
	if x != nil && x.TheSFixed32 != nil {
		return *x.TheSFixed32
	}
	return 0
}

func (x *AllTheThings) GetTheSFixed64() int64 {
	if x != nil && x.TheSFixed64 != nil {
		return *x.TheSFixed64
	}
	return 0
}

func (x *AllTheThings) GetTheFloat() float32 {
	if x != nil && x.TheFloat != nil {
		return *x.TheFloat
	}
	return 0
}

func (x *AllTheThings) GetTheDouble() float64 {
	if x != nil && x.TheDouble != nil {
		return *x.TheDouble
	}
	return 0
}

func (x *AllTheThings) GetTheEventType() EventType {
	if x != nil && x.TheEventType != nil {
		return *x.TheEventType
	}
	return EventType_EVENT_TYPE_UNDEFINED
}

func (x *AllTheThings) GetTheBytes() []byte {
	if x != nil {
		return x.TheBytes
	}
	return nil
}

func (x *AllTheThings) GetTheMessage() *EmbeddedEvent {
	if x != nil {
		return x.TheMessage
	}
	return nil
}

type RepeatAllTheThings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            *int32           `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	TheStrings    []string         `protobuf:"bytes,2,rep,name=theStrings" json:"theStrings,omitempty"`
	TheBools      []bool           `protobuf:"varint,3,rep,name=theBools" json:"theBools,omitempty"`
	TheInt32S     []int32          `protobuf:"varint,4,rep,name=theInt32s" json:"theInt32s,omitempty"`
	TheInt64S     []int64          `protobuf:"varint,5,rep,name=theInt64s" json:"theInt64s,omitempty"`
	TheUInt32S    []uint32         `protobuf:"varint,6,rep,name=theUInt32s" json:"theUInt32s,omitempty"`
	TheUInt64S    []uint64         `protobuf:"varint,7,rep,name=theUInt64s" json:"theUInt64s,omitempty"`
	TheSInt32S    []int32          `protobuf:"zigzag32,8,rep,name=theSInt32s" json:"theSInt32s,omitempty"`
	TheSInt64S    []int64          `protobuf:"zigzag64,9,rep,name=theSInt64s" json:"theSInt64s,omitempty"`
	TheFixed32S   []uint32         `protobuf:"fixed32,10,rep,name=theFixed32s" json:"theFixed32s,omitempty"`
	TheFixed64S   []uint64         `protobuf:"fixed64,11,rep,name=theFixed64s" json:"theFixed64s,omitempty"`
	TheSFixed32S  []int32          `protobuf:"fixed32,12,rep,name=theSFixed32s" json:"theSFixed32s,omitempty"`
	TheSFixed64S  []int64          `protobuf:"fixed64,13,rep,name=theSFixed64s" json:"theSFixed64s,omitempty"`
	TheFloats     []float32        `protobuf:"fixed32,14,rep,name=theFloats" json:"theFloats,omitempty"`
	TheDoubles    []float64        `protobuf:"fixed64,15,rep,name=theDoubles" json:"theDoubles,omitempty"`
	TheEventTypes []EventType      `protobuf:"varint,16,rep,name=theEventTypes,enum=crowdstrike.csproto.example.proto2.googlev1.EventType" json:"theEventTypes,omitempty"`
	TheBytes      [][]byte         `protobuf:"bytes,17,rep,name=theBytes" json:"theBytes,omitempty"`
	TheMessages   []*EmbeddedEvent `protobuf:"bytes,18,rep,name=theMessages" json:"theMessages,omitempty"`
}

func (x *RepeatAllTheThings) Reset() {
	*x = RepeatAllTheThings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatAllTheThings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatAllTheThings) ProtoMessage() {}

func (x *RepeatAllTheThings) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatAllTheThings.ProtoReflect.Descriptor instead.
func (*RepeatAllTheThings) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{4}
}

func (x *RepeatAllTheThings) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *RepeatAllTheThings) GetTheStrings() []string {
	if x != nil {
		return x.TheStrings
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheBools() []bool {
	if x != nil {
		return x.TheBools
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheInt32S() []int32 {
	if x != nil {
		return x.TheInt32S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheInt64S() []int64 {
	if x != nil {
		return x.TheInt64S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheUInt32S() []uint32 {
	if x != nil {
		return x.TheUInt32S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheUInt64S() []uint64 {
	if x != nil {
		return x.TheUInt64S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheSInt32S() []int32 {
	if x != nil {
		return x.TheSInt32S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheSInt64S() []int64 {
	if x != nil {
		return x.TheSInt64S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheFixed32S() []uint32 {
	if x != nil {
		return x.TheFixed32S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheFixed64S() []uint64 {
	if x != nil {
		return x.TheFixed64S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheSFixed32S() []int32 {
	if x != nil {
		return x.TheSFixed32S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheSFixed64S() []int64 {
	if x != nil {
		return x.TheSFixed64S
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheFloats() []float32 {
	if x != nil {
		return x.TheFloats
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheDoubles() []float64 {
	if x != nil {
		return x.TheDoubles
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheEventTypes() []EventType {
	if x != nil {
		return x.TheEventTypes
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheBytes() [][]byte {
	if x != nil {
		return x.TheBytes
	}
	return nil
}

func (x *RepeatAllTheThings) GetTheMessages() []*EmbeddedEvent {
	if x != nil {
		return x.TheMessages
	}
	return nil
}

type EventUsingWKTs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Ts        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ts" json:"ts,omitempty"`
	EventType *EventType             `protobuf:"varint,3,opt,name=event_type,json=eventType,enum=crowdstrike.csproto.example.proto2.googlev1.EventType" json:"event_type,omitempty"`
}

func (x *EventUsingWKTs) Reset() {
	*x = EventUsingWKTs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUsingWKTs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUsingWKTs) ProtoMessage() {}

func (x *EventUsingWKTs) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventUsingWKTs.ProtoReflect.Descriptor instead.
func (*EventUsingWKTs) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{5}
}

func (x *EventUsingWKTs) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EventUsingWKTs) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *EventUsingWKTs) GetEventType() EventType {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return EventType_EVENT_TYPE_UNDEFINED
}

// see https://github.com/CrowdStrike/csproto/pull/124
type I18NVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneOfValues:
	//
	//	*I18NVariable_OptOne
	//	*I18NVariable_OptTwo
	OneOfValues isI18NVariable_OneOfValues `protobuf_oneof:"one_of_values"`
}

func (x *I18NVariable) Reset() {
	*x = I18NVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *I18NVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*I18NVariable) ProtoMessage() {}

func (x *I18NVariable) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use I18NVariable.ProtoReflect.Descriptor instead.
func (*I18NVariable) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{6}
}

func (m *I18NVariable) GetOneOfValues() isI18NVariable_OneOfValues {
	if m != nil {
		return m.OneOfValues
	}
	return nil
}

func (x *I18NVariable) GetOptOne() string {
	if x, ok := x.GetOneOfValues().(*I18NVariable_OptOne); ok {
		return x.OptOne
	}
	return ""
}

func (x *I18NVariable) GetOptTwo() string {
	if x, ok := x.GetOneOfValues().(*I18NVariable_OptTwo); ok {
		return x.OptTwo
	}
	return ""
}

type isI18NVariable_OneOfValues interface {
	isI18NVariable_OneOfValues()
}

type I18NVariable_OptOne struct {
	OptOne string `protobuf:"bytes,1,opt,name=opt_one,json=optOne,oneof"`
}

type I18NVariable_OptTwo struct {
	OptTwo string `protobuf:"bytes,2,opt,name=opt_two,json=optTwo,oneof"`
}

func (*I18NVariable_OptOne) isI18NVariable_OneOfValues() {}

func (*I18NVariable_OptTwo) isI18NVariable_OneOfValues() {}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneOfValues:
	//
	//	*Msg_Tags_
	OneOfValues isMsg_OneOfValues `protobuf_oneof:"one_of_values"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{7}
}

func (m *Msg) GetOneOfValues() isMsg_OneOfValues {
	if m != nil {
		return m.OneOfValues
	}
	return nil
}

func (x *Msg) GetTags() *Msg_Tags {
	if x, ok := x.GetOneOfValues().(*Msg_Tags_); ok {
		return x.Tags
	}
	return nil
}

type isMsg_OneOfValues interface {
	isMsg_OneOfValues()
}

type Msg_Tags_ struct {
	Tags *Msg_Tags `protobuf:"bytes,1,opt,name=tags,oneof"`
}

func (*Msg_Tags_) isMsg_OneOfValues() {}

type TestEvent_NestedMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *string `protobuf:"bytes,1,opt,name=details" json:"details,omitempty"`
}

func (x *TestEvent_NestedMsg) Reset() {
	*x = TestEvent_NestedMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestEvent_NestedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestEvent_NestedMsg) ProtoMessage() {}

func (x *TestEvent_NestedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestEvent_NestedMsg.ProtoReflect.Descriptor instead.
func (*TestEvent_NestedMsg) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TestEvent_NestedMsg) GetDetails() string {
	if x != nil && x.Details != nil {
		return *x.Details
	}
	return ""
}

type Msg_Tags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (x *Msg_Tags) Reset() {
	*x = Msg_Tags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_googlev1_proto2_example_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg_Tags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg_Tags) ProtoMessage() {}

func (x *Msg_Tags) ProtoReflect() protoreflect.Message {
	mi := &file_googlev1_proto2_example_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg_Tags.ProtoReflect.Descriptor instead.
func (*Msg_Tags) Descriptor() ([]byte, []int) {
	return file_googlev1_proto2_example_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Msg_Tags) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var file_googlev1_proto2_example_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*BaseEvent)(nil),
		ExtensionType: (*TestEvent)(nil),
		Field:         100,
		Name:          "crowdstrike.csproto.example.proto2.googlev1.TestEvent.eventExt",
		Tag:           "bytes,100,opt,name=eventExt",
		Filename:      "googlev1_proto2_example.proto",
	},
}

// Extension fields to BaseEvent.
var (
	// optional crowdstrike.csproto.example.proto2.googlev1.TestEvent eventExt = 100;
	E_TestEvent_EventExt = &file_googlev1_proto2_example_proto_extTypes[0]
)

var File_googlev1_proto2_example_proto protoreflect.FileDescriptor

var file_googlev1_proto2_example_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x32, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x2b, 0x63, 0x72, 0x6f, 0x77, 0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2e, 0x63, 0x73, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x01,
	0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x54, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x72, 0x6f, 0x77, 0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65,
	0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x08, 0x08, 0x64, 0x10, 0x80, 0x80,
	0x80, 0x80, 0x02, 0x22, 0x9b, 0x04, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41,
	0x77, 0x65, 0x73, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x41, 0x77, 0x65, 0x73, 0x6f, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x56, 0x0a, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x72, 0x6f, 0x77, 0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2e,
	0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6a, 0x65, 0x64, 0x69, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x65, 0x64, 0x69, 0x12, 0x14, 0x0a,
	0x04, 0x73, 0x69, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x73,
	0x69, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x06, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x72,
	0x6f, 0x77, 0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x1a, 0x25, 0x0a, 0x09, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d,
	0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x32, 0x8a, 0x01, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x12, 0x36, 0x2e, 0x63, 0x72, 0x6f, 0x77,
	0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x72, 0x6f, 0x77, 0x64, 0x73,
	0x74, 0x72, 0x69, 0x6b, 0x65, 0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x75, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x75, 0x66, 0x66, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x68, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x98, 0x05, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x54,
	0x68, 0x65, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x65,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x65, 0x42, 0x6f, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x68, 0x65, 0x42, 0x6f, 0x6f, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x65, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x68, 0x65, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x68, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x68, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x65,
	0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x55, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x68, 0x65, 0x55, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x53, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x74, 0x68, 0x65, 0x53, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x53, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x74, 0x68, 0x65, 0x53, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x65, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x65, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x10, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x53, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x68, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x68, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x5a,
	0x0a, 0x0c, 0x74, 0x68, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x72, 0x6f, 0x77, 0x64, 0x73, 0x74, 0x72, 0x69,
	0x6b, 0x65, 0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x68,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x68,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x72, 0x6f,
	0x77, 0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xbe, 0x05, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x41, 0x6c, 0x6c,
	0x54, 0x68, 0x65, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x65,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x68, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x65,
	0x42, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x08, 0x52, 0x08, 0x74, 0x68, 0x65,
	0x42, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x53, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x11, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x53, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x53, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x12, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x53, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x07, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x06, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x65, 0x53, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x0c, 0x74, 0x68, 0x65,
	0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x65,
	0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x10, 0x52,
	0x0c, 0x74, 0x68, 0x65, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x02,
	0x52, 0x09, 0x74, 0x68, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x68, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x0a, 0x74, 0x68, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0d, 0x74,
	0x68, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x72, 0x6f, 0x77, 0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65,
	0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x74, 0x68, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x68, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0b, 0x74, 0x68, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x72, 0x6f,
	0x77, 0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x69,
	0x6e, 0x67, 0x57, 0x4b, 0x54, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x55, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x72, 0x6f,
	0x77, 0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a,
	0x0c, 0x49, 0x31, 0x38, 0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x6f, 0x70, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x5f,
	0x74, 0x77, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x70, 0x74,
	0x54, 0x77, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x4b, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x72, 0x6f, 0x77,
	0x64, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2e, 0x63, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x48, 0x00, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x1a, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x2a, 0x4d, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x57, 0x4f, 0x10, 0x02, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x43, 0x72, 0x6f, 0x77, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2f, 0x63,
	0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x31,
}

var (
	file_googlev1_proto2_example_proto_rawDescOnce sync.Once
	file_googlev1_proto2_example_proto_rawDescData = file_googlev1_proto2_example_proto_rawDesc
)

func file_googlev1_proto2_example_proto_rawDescGZIP() []byte {
	file_googlev1_proto2_example_proto_rawDescOnce.Do(func() {
		file_googlev1_proto2_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_googlev1_proto2_example_proto_rawDescData)
	})
	return file_googlev1_proto2_example_proto_rawDescData
}

var file_googlev1_proto2_example_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_googlev1_proto2_example_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_googlev1_proto2_example_proto_goTypes = []interface{}{
	(EventType)(0),                // 0: crowdstrike.csproto.example.proto2.googlev1.EventType
	(*BaseEvent)(nil),             // 1: crowdstrike.csproto.example.proto2.googlev1.BaseEvent
	(*TestEvent)(nil),             // 2: crowdstrike.csproto.example.proto2.googlev1.TestEvent
	(*EmbeddedEvent)(nil),         // 3: crowdstrike.csproto.example.proto2.googlev1.EmbeddedEvent
	(*AllTheThings)(nil),          // 4: crowdstrike.csproto.example.proto2.googlev1.AllTheThings
	(*RepeatAllTheThings)(nil),    // 5: crowdstrike.csproto.example.proto2.googlev1.RepeatAllTheThings
	(*EventUsingWKTs)(nil),        // 6: crowdstrike.csproto.example.proto2.googlev1.EventUsingWKTs
	(*I18NVariable)(nil),          // 7: crowdstrike.csproto.example.proto2.googlev1.I18nVariable
	(*Msg)(nil),                   // 8: crowdstrike.csproto.example.proto2.googlev1.Msg
	(*TestEvent_NestedMsg)(nil),   // 9: crowdstrike.csproto.example.proto2.googlev1.TestEvent.NestedMsg
	(*Msg_Tags)(nil),              // 10: crowdstrike.csproto.example.proto2.googlev1.Msg.Tags
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_googlev1_proto2_example_proto_depIdxs = []int32{
	0,  // 0: crowdstrike.csproto.example.proto2.googlev1.BaseEvent.eventType:type_name -> crowdstrike.csproto.example.proto2.googlev1.EventType
	3,  // 1: crowdstrike.csproto.example.proto2.googlev1.TestEvent.embedded:type_name -> crowdstrike.csproto.example.proto2.googlev1.EmbeddedEvent
	9,  // 2: crowdstrike.csproto.example.proto2.googlev1.TestEvent.nested:type_name -> crowdstrike.csproto.example.proto2.googlev1.TestEvent.NestedMsg
	0,  // 3: crowdstrike.csproto.example.proto2.googlev1.AllTheThings.theEventType:type_name -> crowdstrike.csproto.example.proto2.googlev1.EventType
	3,  // 4: crowdstrike.csproto.example.proto2.googlev1.AllTheThings.theMessage:type_name -> crowdstrike.csproto.example.proto2.googlev1.EmbeddedEvent
	0,  // 5: crowdstrike.csproto.example.proto2.googlev1.RepeatAllTheThings.theEventTypes:type_name -> crowdstrike.csproto.example.proto2.googlev1.EventType
	3,  // 6: crowdstrike.csproto.example.proto2.googlev1.RepeatAllTheThings.theMessages:type_name -> crowdstrike.csproto.example.proto2.googlev1.EmbeddedEvent
	11, // 7: crowdstrike.csproto.example.proto2.googlev1.EventUsingWKTs.ts:type_name -> google.protobuf.Timestamp
	0,  // 8: crowdstrike.csproto.example.proto2.googlev1.EventUsingWKTs.event_type:type_name -> crowdstrike.csproto.example.proto2.googlev1.EventType
	10, // 9: crowdstrike.csproto.example.proto2.googlev1.Msg.tags:type_name -> crowdstrike.csproto.example.proto2.googlev1.Msg.Tags
	1,  // 10: crowdstrike.csproto.example.proto2.googlev1.TestEvent.eventExt:extendee -> crowdstrike.csproto.example.proto2.googlev1.BaseEvent
	2,  // 11: crowdstrike.csproto.example.proto2.googlev1.TestEvent.eventExt:type_name -> crowdstrike.csproto.example.proto2.googlev1.TestEvent
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	11, // [11:12] is the sub-list for extension type_name
	10, // [10:11] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_googlev1_proto2_example_proto_init() }
func file_googlev1_proto2_example_proto_init() {
	if File_googlev1_proto2_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_googlev1_proto2_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_googlev1_proto2_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_googlev1_proto2_example_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_googlev1_proto2_example_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTheThings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_googlev1_proto2_example_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatAllTheThings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_googlev1_proto2_example_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUsingWKTs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_googlev1_proto2_example_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*I18NVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_googlev1_proto2_example_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_googlev1_proto2_example_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestEvent_NestedMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_googlev1_proto2_example_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg_Tags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_googlev1_proto2_example_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TestEvent_Jedi)(nil),
		(*TestEvent_Sith)(nil),
		(*TestEvent_Other)(nil),
	}
	file_googlev1_proto2_example_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*I18NVariable_OptOne)(nil),
		(*I18NVariable_OptTwo)(nil),
	}
	file_googlev1_proto2_example_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Msg_Tags_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_googlev1_proto2_example_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_googlev1_proto2_example_proto_goTypes,
		DependencyIndexes: file_googlev1_proto2_example_proto_depIdxs,
		EnumInfos:         file_googlev1_proto2_example_proto_enumTypes,
		MessageInfos:      file_googlev1_proto2_example_proto_msgTypes,
		ExtensionInfos:    file_googlev1_proto2_example_proto_extTypes,
	}.Build()
	File_googlev1_proto2_example_proto = out.File
	file_googlev1_proto2_example_proto_rawDesc = nil
	file_googlev1_proto2_example_proto_goTypes = nil
	file_googlev1_proto2_example_proto_depIdxs = nil
}
